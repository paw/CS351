<!DOCTYPE html>
<head>
    <title>Homework #2: Product List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <style>
        body {
            background: #ccc;
        }
        .rounded-left {
            border-radius: 0px !important;
            border-top-left-radius: .25rem !important;
            border-bottom-left-radius: .25rem !important;
        }
        main.main {
            padding: 20px;
            display: block;
            width: 800px;
            max-width: 100%;
            margin: 2em auto;
        }
        label.input-group-text {
            font-weight: bold;
            background: rgb(var(--bs-secondary-rgb),0.2);
        }
        #table-text {
            width: 100%;
            height: 4em;
        }
        #added {
            margin: 20px 0;
        }
        #added::before {
            margin-left: -30px;
            margin-bottom: 20px;
            font-weight: bold;
            content: 'Products Added:';
            display: block;
            font-size: 1.2em;
        }
        #added:empty::before {
            content: 'You have not added any products.';
            font-style: italic;
            color: var(--bs-secondary);
        }
        .hide { display:none !important;}
    </style>
    <script>

        //creating a simple object for our products
        class Product {
            constructor(name,cat) {
                this.name = name;
                this.category = cat;
            }
        }

        // Function to add a Product object to the products array
        function addItem(products) {
            //once we have at least 1 item we can enable the table-creating button
            document.querySelector("#fin").disabled = false;

            //get elements holding the products' details
            pname = document.getElementById("product");
            cat = document.querySelector("input[name='category']:checked");
            other = document.getElementById("other-text");

            if (pname.value.length == 0) {
                //check to see if the user is a wise guy and messing with inspect element
                alert("Enter a name for your product please!");
                pname.focus();
            } else if (cat.value == "Other" && other.value == "") {
                //check if they selected other but didn't write anything
                alert("Please enter a custom category or select a pre-defined category.");
            } else {
                //everything's good and we can add the product object to the products array.
                //regexp capitalize fix: https://www.freecodecamp.org/news/how-to-capitalize-words-in-javascript/
                if (cat.value == "Other") {
                    prod = new Product(pname.value.replace(/(^\w{1})|(\s+\w{1})/g, letter => letter.toUpperCase()),other.value.replace(/(^\w{1})|(\s+\w{1})/g, letter => letter.toUpperCase()));
                } else {
                    prod = new Product(pname.value.replace(/(^\w{1})|(\s+\w{1})/g, letter => letter.toUpperCase()),cat.value);
                }
                products.push(prod);
                document.getElementById("added").innerHTML += "<li data-product-id=\"" + (products.length-1) + "\" data-product-name=\"" + prod.name + "\"><b>" + prod.name + "</b> in Category <b>" + prod.category + "</b></li>"
                console.log(document.querySelector("#added li:last-child"));
                //reset the form values
                pname.value = "";
                other.value = "";
                document.querySelector("input[name='category']").checked = true; //recheck the first category checkbox
                pname.focus(); //set focus back on product name input for convenience
                document.getElementById("addproduct").disabled = true; //re-disable buttons
            }
        }

        //Function to reset the form
        function reset(products) {
            clearTable(); //clear table contents
            products.splice(0, products.length); //empty out products array
            document.getElementById("added").innerHTML = ''; // empty out list of added products
            document.getElementById("fin").disabled = 'disabled'; //disable create table button
            document.querySelectorAll(".step").forEach((element) => element.classList.toggle("hide")); //rehide step 2, unhide step 1
        }
        //simple function to clear the product table's contents
        function clearTable() {
            document.querySelector("#table tbody").innerHTML = '';
        }

        //function to generate the table
        function createTable(products) {
            //sort products by name to start
            products.sort(compareByName);
            //hide step 1, unhide step 2 by toggling the hidden class
            document.querySelectorAll(".step").forEach((element) => element.classList.toggle("hide"));
            //add the list of products to the table
            products.forEach((element) => document.querySelector("#table tbody").innerHTML += "<tr><td>" + element.name + "</td><td>" + element.category + "</td></tr>");
        }

        //fuction to compare 2 Products by name
        function compareByName(a, b) {
            // localeCompare docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare
            if (a.name.localeCompare(b.name, 'en', { sensitivity: 'base' }) <= -1){
                // a comes before b
                return -1;
            }
            if (a.name.localeCompare(b.name, 'en', { sensitivity: 'base' }) >= 1){
                // a comes after b
                return 1;
            } else {
                //a is equivalent to b, so we then compare by category.
                compareByCategory(a, b);
            }
        }

        //Function to compare 2 Products by category. 
        function compareByCategory(a, b) {
            //it's only ever called after we've sorted by name so products SHOULD always be in alphabetical order
            if (a.category.localeCompare(b.category, 'en', { sensitivity: 'base' }) <= -1){
                //a's category comes before b's category
                return -1;
            }
            if (a.category.localeCompare(b.category, 'en', { sensitivity: 'base' }) >= 1){
                //a's category comes after b's category
                return 1;
            } else {
                //same category, do nothing
                return 0;
            }
        }

        function sortTable(products,type) {
            clearTable(); //empty out table
            if (type == 1) {
                //sorting by category
                products.sort(compareByCategory);
            } else {
                //sorting by name
                products.sort(compareByName);
            }
            //repopulate table contents
            products.forEach((element) => document.querySelector("#table tbody").innerHTML += "<tr><td>" + element.name + "</td><td>" + element.category + "</td></tr>");
        }

        
        // Set everything up when the DOM is ready.
        document.addEventListener("DOMContentLoaded", function() {

            //creating our products array to be passed to our functions
            var products = new Array();
            document.querySelectorAll("#stepone button").forEach((element) => element.disabled = true );

            document.getElementById("product").focus();
            //solution to disable button when product name is empty: https://stackoverflow.com/a/74087575
            document.getElementById("product").addEventListener('input', () => document.getElementById("addproduct").disabled = document.getElementById("product").value === '');

            //adding event listeners to all our buttons so we can call our functions
            document.getElementById("addproduct").addEventListener("click", function() { addItem(products) });
            document.getElementById("fin").addEventListener("click", function() { createTable(products) });
            document.getElementById("sortname").addEventListener("click", function() {sortTable(products,0)});
            document.getElementById("sortcat").addEventListener("click", function() {sortTable(products,1)});
            document.getElementById("reset").addEventListener("click", function() { reset(products) });
            
            //event listeners for other category option to make some things more convenient
            document.getElementById("other").addEventListener("input", (event) => { document.getElementById("other-text").focus()});
            document.getElementById("other-text").addEventListener("input", (event) => { document.getElementById("other").checked = true});
        });

    </script>
</head>
<body lang="en">
    <main class="main container mt-2 mb-2 py-3 px-4 bg-light text-dark rounded">
    <h1>Dynamic Product List</h1>
    <hr>
        <section id="stepone" class="step">
            <p>Add products by filling out the form and clicking add product. When you're finished, press Display Products to create a table displaying all of your products.</p>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <label for="product" id="productname" class="input-group-text rounded-left">Product Name:</label>
                </div>
                <input type="text" class="form-control" id="product" placeholder="Product Name" aria-label="Product Name" aria-describedby="productname">
            </div>
            
            <label for="categorychoice" class="input-group-text mb-2">Product Category:</label>
            <div id="categorychoice" class="px-2 input-group">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="home" name="category" value="Home" checked></input><label for="home" class="form-check-label">Home</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="food" name="category" value="Food"></input><label for="food" class="form-check-label">Food</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="clothing" name="category" value="Clothing"></input><label for="clothing" class="form-check-label">Clothing</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="pets" name="category" value="Pets"></input><label for="pets" class="form-check-label">Pets</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="toys" name="category" value="Toys & Games"></input><label for="toys" class="form-check-label">Toys & Games</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="sports" name="category" value="Sports"></input><label for="sports" class="form-check-label">Sports</label>
                </div>
                <div class="input-group-prepend">
                    <div class="input-group-text">
                      <input type="radio" id="other" name="category" aria-label="Other" value="Other">
                    </div>
                  </div>
                  <input type="text" class="form-control" placeholder="Other" id="other-text">
            </div>
            <div class="mt-3 text-center">
                <button id="addproduct" class="btn btn-primary m-1" disabled>Add Product</button>
                <button id="fin" class="btn btn-success m-1" disabled>Display Products</button>
            </div>
        </section>
        <ol id="added" class="step"></ol>
        <section id="steptwo" class="step hide">
            <button id="sortname" class="btn btn-secondary m-1">Sort by Name</button>
            <button id="sortcat" class="btn btn-secondary m-1">Sort by Category</button> 
            <button id="reset" class="btn btn-danger m-1">Reset</button></section>
        <section id="table" class="step hide">
            <table id="products" class="table border mt-2">
                <thead class="table-dark thead-dark">
                    <tr>
                        <th>Name</th>
                        <th>Category</th>
                    </tr>
                  </thead>
                <tbody></tbody>
            </table>
        </section>
    </main>
</body>